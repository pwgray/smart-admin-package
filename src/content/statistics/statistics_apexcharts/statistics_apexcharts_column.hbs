{{#> 
	layouts/main 
	title="Apexcharts - Column" 
	pagename="statistics_apexcharts_column" 
	category_1="Statistics" 
	category_2="Apexcharts"
	heading="<i class='subheader-icon fal fa-chart-pie'></i> Apexchart: <span class='fw-300'>Column</span> <sup class='badge badge-primary fw-500'>ADDON</sup>" 
	pagedescription="Explore the sample JavaScript charts created to show some of the enticing features packed in ApexChart"
}}

{{#*inline "head-block"}}
<link rel="stylesheet" media="screen, print" href="css/statistics/apexcharts/apexcharts.css">
{{/inline}}

{{#*inline "content-block"}}

<div class="alert alert-primary">
	<div class="d-flex flex-start w-100">
		<div class="mr-2 hidden-md-down">
			<span class="icon-stack icon-stack-lg">
				<i class="base base-6 icon-stack-3x opacity-100 color-primary-500"></i>
				<i class="base base-10 icon-stack-2x opacity-100 color-primary-300 fa-flip-vertical"></i>
				<i class="ni ni-blog-read icon-stack-1x opacity-100 color-white"></i>
			</span>
		</div>
		<div class="d-flex flex-fill">
			<div class="flex-fill">
				<span class="h5">Column Charts</span>
				<p>Column Charts are a typical pictorial representation that depicts trends and behaviors over time. It is represented by a series of data points connected with a line. A unique feature of the line chart is the possibility of incorporating a large number of data into a single chart without any difficulty in viewing or understanding the information on the chart. In this line chart guide, we will go through the configuration and options to plot different kinds of line graphs.
				</p>
				<p class="m-0">
					Find tutorials, guidelines and more on their <a href="https://apexcharts.com/docs/chart-types/column-chart/" target="_blank">official documentation</a> 
				</p>
			</div>
		</div>
	</div>
</div>

<div class="row">

	<div class="col-xl-12">
		<!-- column with rotated labels -->
		<div id="panel-5" class="panel">
			<div class="panel-hdr">	
				<h2>
					Column w/ Rotated <span class="fw-300"><i>Labels</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="columnsWithRotatedChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
	</div>

	<div class="col-xl-6">
		<!-- basic column chart -->
		<div id="panel-1" class="panel">
			<div class="panel-hdr">	
				<h2>
					Basic <span class="fw-300"><i>Column Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="basicColumnChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- datatables chart -->
		<div id="panel-2" class="panel">
			<div class="panel-hdr">	
				<h2>
					Datatables <span class="fw-300"><i>Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="datatablesChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- stacked columns -->
		<div id="panel-3" class="panel">
			<div class="panel-hdr">	
				<h2>
					Stacked Column <span class="fw-300"><i>Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">			
					<div id="stackedColumnChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>

	</div>	
	<div class="col-xl-6">
		<!-- column with rotated labels -->
		<div id="panel-6" class="panel">
			<div class="panel-hdr">	
				<h2>
					Column w/ Negative <span class="fw-300"><i>Values</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="columnsWithNegativeValuesChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>

		<!-- Distributed columns chart -->
		<div id="panel-9" class="panel">
			<div class="panel-hdr">	
				<h2>
					Distributed Columns <span class="fw-300"><i>Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="distributedColumnsChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>

		<!-- stacked 100 columns -->
		<div id="panel-4" class="panel">
			<div class="panel-hdr">	
				<h2>
					Stacked Column 100<span class="fw-300"><i>Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">			
					<div id="stackedColumn100Chart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		
	</div>	
</div>

{{/inline}}

{{#*inline "scripts-block"}}
<!-- plugin apexcharts.bundle.js : MIT license -->
<script>
  window.Promise ||
	document.write(
	  '<script src="https://cdn.jsdelivr.net/npm/promise-polyfill@8/dist/polyfill.min.js"><\/script>'
	);
  window.Promise ||
	document.write(
	  '<script src="https://cdn.jsdelivr.net/npm/eligrey-classlist-js-polyfill@1.2.20171210/classList.min.js"><\/script>'
	);
  window.Promise ||
	document.write(
	  '<script src="https://cdn.jsdelivr.net/npm/findindex_polyfill_mdn"><\/script>'
	);
</script>
<script src="js/statistics/demo-data/apexcharts-irregular-data-series.js"></script>
<script src="js/statistics/apexcharts/apexcharts.bundle.js"></script>
<script>	

	/*FORMAT DATA*/
	var ts2 = 1484418600000;
	var dates = [];
	var spikes = [5, -5, 3, -3, 8, -8]
	for (var i = 0; i < 120; i++) {
		ts2 = ts2 + 86400000;
		var innerArr = [ts2, dataSeries[1][i].value];
		dates.push(innerArr)
	}

	/* DATE FORMAT LIVE DATA */
	var lastDate = 0;
	var data = []
	var TICKINTERVAL = 86400000
	let XAXISRANGE = 777600000

	function getDayWiseTimeSeries(baseval, count, yrange) {
		var i = 0;
		while (i < count) {
			var x = baseval;
			var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;

			data.push({
				x,
				y
			});
			lastDate = baseval
			baseval += TICKINTERVAL;
			i++;
		}
	}

	getDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {
		min: 10,
		max: 90
	})

	function getNewSeries(baseval, yrange) {
		var newDate = baseval + TICKINTERVAL;
		lastDate = newDate

		for (var i = 0; i < data.length - 10; i++) {
			// IMPORTANT
			// we reset the x and y of the data which is out of drawing area
			// to prevent memory leaks
			data[i].x = newDate - XAXISRANGE - TICKINTERVAL
			data[i].y = 0
		}

		data.push({
			x: newDate,
			y: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min
		})
	}

	function resetData() {
		// Alternatively, you can also reset the data at certain intervals to prevent creating a huge series 
		data = data.slice(data.length - 10, data.length);
	}
	/* DATE FORMAT LIVE DATA -- end */

	/* basic column chart */
	var basicColumnChartOptions = {
          series: [{
          name: 'Net Profit',
          data: [44, 55, 57, 56, 61, 58, 63, 60, 66]
        }, {
          name: 'Revenue',
          data: [76, 85, 101, 98, 87, 105, 91, 114, 94]
        }, {
          name: 'Free Cash Flow',
          data: [35, 41, 36, 26, 45, 48, 52, 53, 41]
        }],
          chart: {
          type: 'bar',
          height: 350
        },
        plotOptions: {
          bar: {
            horizontal: false,
            columnWidth: '55%',
            endingShape: 'rounded'
          },
        },
        dataLabels: {
          enabled: false
        },
        colors:[color.primary._500, color.info._500, color.success._500],
        stroke: {
          show: true,
          width: 2,
          colors: ['transparent']
        },
        xaxis: {
          categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],
        },
        yaxis: {
          title: {
            text: '$ (thousands)'
          }
        },
        fill: {
          opacity: 1
        },
        tooltip: {
          y: {
            formatter: function (val) {
              return "$ " + val + " thousands"
            }
          }
        }
    };

    var basicColumnChart = new ApexCharts(document.querySelector("#basicColumnChart"), basicColumnChartOptions);
 	/* basic column chart -- end */


 	/* datatables chart */
 	var datatablesChartOptions = {
          series: [{
          name: 'Inflation',
          data: [2.3, 3.1, 4.0, 10.1, 4.0, 3.6, 3.2, 2.3, 1.4, 0.8, 0.5, 0.2]
        }],
          chart: {
          height: 350,
          type: 'bar',
        },
        plotOptions: {
          bar: {
            dataLabels: {
              position: 'top', // top, center, bottom
            },
          }
        },
        dataLabels: {
          enabled: true,
          formatter: function (val) {
            return val + "%";
          },
          offsetY: -20,
          style: {
            fontSize: '12px',
            colors: ["#304758"]
          }
        },
        colors: [color.primary._500],
        xaxis: {
          categories: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
          position: 'top',
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          crosshairs: {
            fill: {
              type: 'gradient',
              gradient: {
                colorFrom: '#D8E3F0',
                colorTo: '#BED1E6',
                stops: [0, 100],
                opacityFrom: 0.4,
                opacityTo: 0.5,
              }
            }
          },
          tooltip: {
            enabled: true,
          }
        },
        yaxis: {
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false,
          },
          labels: {
            show: false,
            formatter: function (val) {
              return val + "%";
            }
          }
        
        },
        title: {
          text: 'Monthly Inflation in Argentina, 2002',
          floating: true,
          offsetY: 330,
          align: 'center',
          style: {
            color: '#444'
          }
        }
        };

        var datatablesChart = new ApexCharts(document.querySelector("#datatablesChart"), datatablesChartOptions);
        

    /* datatables chart -- end */

    /* Stacked Columns chart */

    var stackedColumnChartOptions = {
          series: [{
          name: 'PRODUCT A',
          data: [44, 55, 41, 67, 22, 43]
        }, {
          name: 'PRODUCT B',
          data: [13, 23, 20, 8, 13, 27]
        }, {
          name: 'PRODUCT C',
          data: [11, 17, 15, 15, 21, 14]
        }, {
          name: 'PRODUCT D',
          data: [21, 7, 25, 13, 22, 8]
        }],
          chart: {
          type: 'bar',
          height: 350,
          stacked: true,
          toolbar: {
            show: true
          },
          zoom: {
            enabled: true
          }
        },
        colors: [color.primary._500, color.info._500, color.success._500, color.danger._500],
        responsive: [{
          breakpoint: 480,
          options: {
            legend: {
              position: 'bottom',
              offsetX: -10,
              offsetY: 0
            }
          }
        }],
        plotOptions: {
          bar: {
            horizontal: false,
          },
        },
        xaxis: {
          type: 'datetime',
          categories: ['01/01/2011 GMT', '01/02/2011 GMT', '01/03/2011 GMT', '01/04/2011 GMT',
            '01/05/2011 GMT', '01/06/2011 GMT'
          ],
        },
        legend: {
          position: 'right',
          offsetY: 40
        },
        fill: {
          opacity: 1
        }
    };

    var stackedColumnChart = new ApexCharts(document.querySelector("#stackedColumnChart"), stackedColumnChartOptions);
       
    /* Stacked Columns chart -- end */

    /* Stacked Columns 100 chart */

    var stackedColumn100ChartOptions = {
          series: [{
          name: 'PRODUCT A',
          data: [44, 55, 41, 67, 22, 43, 21, 49]
        }, {
          name: 'PRODUCT B',
          data: [13, 23, 20, 8, 13, 27, 33, 12]
        }, {
          name: 'PRODUCT C',
          data: [11, 17, 15, 15, 21, 14, 15, 13]
        }],
          chart: {
          type: 'bar',
          height: 350,
          stacked: true,
          stackType: '100%'
        },
        responsive: [{
          breakpoint: 480,
          options: {
            legend: {
              position: 'bottom',
              offsetX: -10,
              offsetY: 0
            }
          }
        }],
        colors: [color.primary._500, color.warning._500, color.success._500],
        xaxis: {
          categories: ['2011 Q1', '2011 Q2', '2011 Q3', '2011 Q4', '2012 Q1', '2012 Q2',
            '2012 Q3', '2012 Q4'
          ],
        },
        fill: {
          opacity: 1
        },
        legend: {
          position: 'right',
          offsetX: 0,
          offsetY: 50
        },
    };

	var stackedColumn100Chart = new ApexCharts(document.querySelector("#stackedColumn100Chart"), stackedColumn100ChartOptions);
	

    /* Stacked Columns 100 chart -- end */

    /* Columns w/ Rotated Labels */
    
    var columnsWithRotatedChartOptions = {
          series: [{
          name: 'Servings',
          data: [44, 55, 41, 67, 22, 43, 21, 33, 45, 31, 87, 65, 35]
        }],
          annotations: {
          points: [{
            x: 'Bananas',
            seriesIndex: 0,
            label: {
              borderColor: color.primary._700,
              offsetY: 0,
              style: {
                color: '#fff',
                background: color.primary._500,
              },
              text: 'Bananas are good',
            }
          }]
        },
        chart: {
          height: 350,
          type: 'bar',
        },
        plotOptions: {
          bar: {
            columnWidth: '50%',
            endingShape: 'rounded'  
          }
        },
        dataLabels: {
          enabled: false
        },
        stroke: {
          width: 2
        },
        
        grid: {
          row: {
            colors: ['#fff', '#f2f2f2']
          }
        },
        xaxis: {
          labels: {
            rotate: -45
          },
          categories: ['Apples', 'Orng', 'Stra. B', 'P.Apple', 'Mangoes', 'Bananas',
            'B.Berries', 'Pears', 'Watermelons', 'Cherries', 'Pomegranates', 'Tangerines', 'Papayas'
          ],
          tickPlacement: 'on'
        },
        yaxis: {
          title: {
            text: 'Servings',
          },
        },
        fill: {
          type: 'gradient',
          gradient: {
            shade: 'light',
            type: "horizontal",
            shadeIntensity: 0.25,
            gradientToColors: undefined,
            inverseColors: true,
            opacityFrom: 0.85,
            opacityTo: 0.85,
            stops: [50, 0, 100]
          },
        }
    };

	var columnsWithRotatedChart = new ApexCharts(document.querySelector("#columnsWithRotatedChart"), columnsWithRotatedChartOptions);

    /* Columns w/ Rotated Labels -- end */

    /* Column w/ Negative Values */
    var columnsWithNegativeValuesChartOptions = {
          series: [{
          name: 'Cash Flow',
          data: [1.45, 5.42, 5.9, -0.42, -12.6, -18.1, -18.2, -14.16, -11.1, -6.09, 0.34, 3.88, 13.07,
            5.8, 2, 7.37, 8.1, 13.57, 15.75, 17.1, 19.8, -27.03, -54.4, -47.2, -43.3, -18.6, -
            48.6, -41.1, -39.6, -37.6, -29.4, -21.4, -2.4
          ]
        }],
          chart: {
          type: 'bar',
          height: 350
        },
        plotOptions: {
          bar: {
            colors: {
              ranges: [{
                from: -100,
                to: -46,
                color: color.primary._500
              }, {
                from: -45,
                to: 0,
                color: color.success._500
              }]
            },
            columnWidth: '80%',
          }
        },
        dataLabels: {
          enabled: false,
        },
        yaxis: {
          title: {
            text: 'Growth',
          },
          labels: {
            formatter: function (y) {
              return y.toFixed(0) + "%";
            }
          }
        },
        xaxis: {
          type: 'datetime',
          categories: [
            '2011-01-01', '2011-02-01', '2011-03-01', '2011-04-01', '2011-05-01', '2011-06-01',
            '2011-07-01', '2011-08-01', '2011-09-01', '2011-10-01', '2011-11-01', '2011-12-01',
            '2012-01-01', '2012-02-01', '2012-03-01', '2012-04-01', '2012-05-01', '2012-06-01',
            '2012-07-01', '2012-08-01', '2012-09-01', '2012-10-01', '2012-11-01', '2012-12-01',
            '2013-01-01', '2013-02-01', '2013-03-01', '2013-04-01', '2013-05-01', '2013-06-01',
            '2013-07-01', '2013-08-01', '2013-09-01'
          ],
          labels: {
            rotate: -90
          }
        }
    };

	var columnsWithNegativeValuesChart = new ApexCharts(document.querySelector("#columnsWithNegativeValuesChart"), columnsWithNegativeValuesChartOptions);
	

    /* Column w/ Negative Values -- end */

    /* distributedColumnsChart */
    var colors = [
      color.primary._500,
      color.warning._500,
      color.success._500,
      color.danger._500,
      color.info._500,
      color.primary._700,
      color.success._700,
      color.warning._700
    ]
    var distributedColumnsChartOptions = {
          series: [{
          data: [21, 22, 10, 28, 16, 21, 13, 30]
        }],
          chart: {
          height: 350,
          type: 'bar',
          events: {
            click: function(chart, w, e) {
              // console.log(chart, w, e)
            }
          }
        },
        colors: colors,
        plotOptions: {
          bar: {
            columnWidth: '45%',
            distributed: true
          }
        },
        dataLabels: {
          enabled: false
        },
        legend: {
          show: false
        },
        xaxis: {
          categories: [
            ['John', 'Doe'],
            ['Joe', 'Smith'],
            ['Jake', 'Williams'],
            'Amber',
            ['Peter', 'Brown'],
            ['Mary', 'Evans'],
            ['David', 'Wilson'],
            ['Lily', 'Roberts'], 
          ],
          labels: {
            style: {
              colors: colors,
              fontSize: '12px'
            }
          }
        }
    };

	var distributedColumnsChart = new ApexCharts(document.querySelector("#distributedColumnsChart"), distributedColumnsChartOptions);
    /* distributedColumnsChart -- end */

	/* initilize all charts on DOM ready */
	$(document).ready(function() {
		basicColumnChart.render();
		datatablesChart.render();
		stackedColumnChart.render();
		stackedColumn100Chart.render();
		columnsWithRotatedChart.render();
		columnsWithNegativeValuesChart.render();
		distributedColumnsChart.render();
	});

</script>
{{/inline}}

{{/layouts/main}}