{{#> 
	layouts/main 
	title="Apexcharts - Bar" 
	pagename="statistics_apexcharts_bar" 
	category_1="Statistics" 
	category_2="Apexcharts"
	heading="<i class='subheader-icon fal fa-chart-pie'></i> Apexchart: <span class='fw-300'>Line</span> <sup class='badge badge-primary fw-500'>ADDON</sup>" 
	pagedescription="Explore the sample JavaScript charts created to show some of the enticing features packed in ApexChart"
}}

{{#*inline "head-block"}}
<link rel="stylesheet" media="screen, print" href="css/statistics/apexcharts/apexcharts.css">
{{/inline}}

{{#*inline "content-block"}}

<div class="alert alert-primary">
	<div class="d-flex flex-start w-100">
		<div class="mr-2 hidden-md-down">
			<span class="icon-stack icon-stack-lg">
				<i class="base base-6 icon-stack-3x opacity-100 color-primary-500"></i>
				<i class="base base-10 icon-stack-2x opacity-100 color-primary-300 fa-flip-vertical"></i>
				<i class="ni ni-blog-read icon-stack-1x opacity-100 color-white"></i>
			</span>
		</div>
		<div class="d-flex flex-fill">
			<div class="flex-fill">
				<span class="h5">Column Charts</span>
				<p>Column Charts are a typical pictorial representation that depicts trends and behaviors over time. It is represented by a series of data points connected with a line. A unique feature of the line chart is the possibility of incorporating a large number of data into a single chart without any difficulty in viewing or understanding the information on the chart. In this line chart guide, we will go through the configuration and options to plot different kinds of line graphs.
				</p>
				<p class="m-0">
					Find tutorials, guidelines and more on their <a href="https://apexcharts.com/docs/chart-types/column-chart/" target="_blank">official documentation</a> 
				</p>
			</div>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-xl-6">
		<!-- basic bar chart -->
		<div id="panel-1" class="panel">
			<div class="panel-hdr">	
				<h2>
					Basic <span class="fw-300"><i>Bar Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">			
					<div id="basicBarChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- Grouped Bar Chart -->
		<div id="panel-2" class="panel">
			<div class="panel-hdr">	
				<h2>
					Grouped <span class="fw-300"><i>Bar Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="groupedBarChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- Stacked Bar Chart -->
		<div id="panel-3" class="panel">
			<div class="panel-hdr">	
				<h2>
					Stacked <span class="fw-300"><i>Bar Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="stackedBarChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- Stacked Bar Chart 100 -->
		<div id="panel-4" class="panel">
			<div class="panel-hdr">	
				<h2>
					Stacked <span class="fw-300"><i>Bar Chart 100</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="stackedBarChart100" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
	</div>	
	<div class="col-xl-6">
		<!-- Bar w/ Negative Values-->
		<div id="panel-8" class="panel">
			<div class="panel-hdr">	
				<h2>
					Bar w/ <span class="fw-300"><i>Negative Values</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="barChartNegativeValues" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- Reversed Bar Chart -->
		<div id="panel-9" class="panel">
			<div class="panel-hdr">	
				<h2>
					Reversed <span class="fw-300"><i>Bar Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="reservedBarChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- Custom Data Labels-->
		<div id="panel-10" class="panel">
			<div class="panel-hdr">	
				<h2>
					Custom <span class="fw-300"><i>Data Labels</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="customDataLabelsBarChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- Patterned Labels -->
		<div id="panel-11" class="panel">
			<div class="panel-hdr">	
				<h2>
					Patterned <span class="fw-300"><i>Labels</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="patternedLabelsBarChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
	</div>	
	<div class="col-xl-12">
		<!-- Bar w/ Images -->
		<div id="panel-5" class="panel">
			<div class="panel-hdr">	
				<h2>
					Bar w/ <span class="fw-300"><i>Images</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="barChartImages" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
	</div>
</div>

{{/inline}}

{{#*inline "scripts-block"}}
<!-- plugin apexcharts.bundle.js : MIT license -->
<script>
  window.Promise ||
	document.write(
	  '<script src="https://cdn.jsdelivr.net/npm/promise-polyfill@8/dist/polyfill.min.js"><\/script>'
	);
  window.Promise ||
	document.write(
	  '<script src="https://cdn.jsdelivr.net/npm/eligrey-classlist-js-polyfill@1.2.20171210/classList.min.js"><\/script>'
	);
  window.Promise ||
	document.write(
	  '<script src="https://cdn.jsdelivr.net/npm/findindex_polyfill_mdn"><\/script>'
	);
</script>
<script src="js/statistics/demo-data/apexcharts-irregular-data-series.js"></script>
<script src="js/statistics/apexcharts/apexcharts.bundle.js"></script>
<script>	

	/*FORMAT DATA*/
	var ts2 = 1484418600000;
	var dates = [];
	var spikes = [5, -5, 3, -3, 8, -8]
	for (var i = 0; i < 120; i++) {
		ts2 = ts2 + 86400000;
		var innerArr = [ts2, dataSeries[1][i].value];
		dates.push(innerArr)
	}

	/* DATE FORMAT LIVE DATA */
	var lastDate = 0;
	var data = []
	var TICKINTERVAL = 86400000
	let XAXISRANGE = 777600000

	function getDayWiseTimeSeries(baseval, count, yrange) {
		var i = 0;
		while (i < count) {
			var x = baseval;
			var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;

			data.push({
				x,
				y
			});
			lastDate = baseval
			baseval += TICKINTERVAL;
			i++;
		}
	}

	getDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {
		min: 10,
		max: 90
	})

	function getNewSeries(baseval, yrange) {
		var newDate = baseval + TICKINTERVAL;
		lastDate = newDate

		for (var i = 0; i < data.length - 10; i++) {
			// IMPORTANT
			// we reset the x and y of the data which is out of drawing area
			// to prevent memory leaks
			data[i].x = newDate - XAXISRANGE - TICKINTERVAL
			data[i].y = 0
		}

		data.push({
			x: newDate,
			y: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min
		})
	}

	function resetData() {
		// Alternatively, you can also reset the data at certain intervals to prevent creating a huge series 
		data = data.slice(data.length - 10, data.length);
	}
	/* DATE FORMAT LIVE DATA -- end */

	/* basic line chart */
	var basicBarChartOptions = {
		  series: [{
		  data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380]
		}],
		  chart: {
		  type: 'bar',
		  height: 350
		},
		plotOptions: {
		  bar: {
			horizontal: true,
		  }
		},
		dataLabels: {
		  enabled: false
		},
		xaxis: {
		  categories: ['South Korea', 'Canada', 'United Kingdom', 'Netherlands', 'Italy', 'France', 'Japan',
			'United States', 'China', 'Germany'
		  ],
		}
	};

	var basicBarChart = new ApexCharts(document.querySelector("#basicBarChart"), basicBarChartOptions);
	/* basic line chart -- end */


	/* groupedBarChartOptions */
	var groupedBarChartOptions = {
		  series: [{
		  data: [44, 55, 41, 64, 22, 43, 21]
		}, {
		  data: [53, 32, 33, 52, 13, 44, 32]
		}],
		  chart: {
		  type: 'bar',
		  height: 430
		},
		plotOptions: {
		  bar: {
			horizontal: true,
			dataLabels: {
			  position: 'top',
			},
		  }
		},
		dataLabels: {
		  enabled: true,
		  offsetX: -6,
		  style: {
			fontSize: '12px',
			colors: ['#fff']
		  }
		},
		stroke: {
		  show: true,
		  width: 1,
		  colors: ['#fff']
		},
		xaxis: {
		  categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],
		},
		};

		var groupedBarChart = new ApexCharts(document.querySelector("#groupedBarChart"), groupedBarChartOptions);
		
	/* groupedBarChartOptions */

	/* - */
	var stackedBarChartOptions = {
		  series: [{
		  name: 'Marine Sprite',
		  data: [44, 55, 41, 37, 22, 43, 21]
		}, {
		  name: 'Striking Calf',
		  data: [53, 32, 33, 52, 13, 43, 32]
		}, {
		  name: 'Tank Picture',
		  data: [12, 17, 11, 9, 15, 11, 20]
		}, {
		  name: 'Bucket Slope',
		  data: [9, 7, 5, 8, 6, 9, 4]
		}, {
		  name: 'Reborn Kid',
		  data: [25, 12, 19, 32, 25, 24, 10]
		}],
		  chart: {
		  type: 'bar',
		  height: 350,
		  stacked: true,
		},
		plotOptions: {
		  bar: {
			borderRadius: 8,
			horizontal: true,
		  },
		},
		stroke: {
		  width: 1,
		  colors: ['#fff']
		},
		xaxis: {
		  categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],
		  labels: {
			formatter: function (val) {
			  return val + "K"
			}
		  }
		},
		yaxis: {
		  title: {
			text: undefined
		  },
		},
		tooltip: {
		  y: {
			formatter: function (val) {
			  return val + "K"
			}
		  }
		},
		fill: {
		  opacity: 1
		},
		legend: {
		  position: 'top',
		  horizontalAlign: 'left',
		  offsetX: 40
		}
	};

	var stackedBarChart = new ApexCharts(document.querySelector("#stackedBarChart"), stackedBarChartOptions);
	stackedBarChart.render();
	/* - */

	/* - */
	var stackedBarChart100options = {
		  series: [{
		  name: 'Marine Sprite',
		  data: [44, 55, 41, 37, 22, 43, 21]
		}, {
		  name: 'Striking Calf',
		  data: [53, 32, 33, 52, 13, 43, 32]
		}, {
		  name: 'Tank Picture',
		  data: [12, 17, 11, 9, 15, 11, 20]
		}, {
		  name: 'Bucket Slope',
		  data: [9, 7, 5, 8, 6, 9, 4]
		}, {
		  name: 'Reborn Kid',
		  data: [25, 12, 19, 32, 25, 24, 10]
		}],
		  chart: {
		  type: 'bar',
		  height: 350,
		  stacked: true,
		  stackType: '100%'
		},
		plotOptions: {
		  bar: {
			horizontal: true,
		  },
		},
		stroke: {
		  width: 1,
		  colors: ['#fff']
		},
		xaxis: {
		  categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],
		},
		tooltip: {
		  y: {
			formatter: function (val) {
			  return val + "K"
			}
		  }
		},
		fill: {
		  opacity: 1
		
		},
		legend: {
		  position: 'top',
		  horizontalAlign: 'left',
		  offsetX: 40
		}
	};

	var stackedBarChart100 = new ApexCharts(document.querySelector("#stackedBarChart100"), stackedBarChart100options);
	/* - */

	/* - */
	 var barChartNegativeValuesOptions = {
		  series: [{
		  name: 'Males',
		  data: [0.4, 0.65, 0.76, 0.88, 1.5, 2.1, 2.9, 3.8, 3.9, 4.2, 4, 4.3, 4.1, 4.2, 4.5,
			3.9, 3.5, 3
		  ]
		},
		{
		  name: 'Females',
		  data: [-0.8, -1.05, -1.06, -1.18, -1.4, -2.2, -2.85, -3.7, -3.96, -4.22, -4.3, -4.4,
			-4.1, -4, -4.1, -3.4, -3.1, -2.8
		  ]
		}
		],
		  chart: {
		  type: 'bar',
		  height: 440,
		  stacked: true
		},
		colors: ['#008FFB', '#FF4560'],
		plotOptions: {
		  bar: {
			horizontal: true,
			barHeight: '80%',
			borderRadius: 7,
			radiusOnLastStackedBar: false
		  },
		},
		dataLabels: {
		  enabled: false
		},
		stroke: {
		  width: 1,
		  colors: ["#fff"]
		},
		
		grid: {
		  xaxis: {
			lines: {
			  show: false
			}
		  }
		},
		yaxis: {
		  min: -5,
		  max: 5,
		  title: {
			// text: 'Age',
		  },
		},
		tooltip: {
		  shared: false,
		  x: {
			formatter: function (val) {
			  return val
			}
		  },
		  y: {
			formatter: function (val) {
			  return Math.abs(val) + "%"
			}
		  }
		},
		title: {
		  text: 'Mauritius population pyramid 2011'
		},
		xaxis: {
		  categories: ['85+', '80-84', '75-79', '70-74', '65-69', '60-64', '55-59', '50-54',
			'45-49', '40-44', '35-39', '30-34', '25-29', '20-24', '15-19', '10-14', '5-9',
			'0-4'
		  ],
		  title: {
			text: 'Percent'
		  },
		  labels: {
			formatter: function (val) {
			  return Math.abs(Math.round(val)) + "%"
			}
		  }
		},
		};

		var barChartNegativeValues = new ApexCharts(document.querySelector("#barChartNegativeValues"), barChartNegativeValuesOptions);
	   
	  
	/* - */

	/* - */
	var reservedBarChartOptions = {
		  series: [{
		  data: [400, 430, 448, 470, 540, 580, 690]
		}],
		  chart: {
		  type: 'bar',
		  height: 350
		},
		annotations: {
		  xaxis: [{
			x: 500,
			borderColor: '#00E396',
			label: {
			  borderColor: '#00E396',
			  style: {
				color: '#fff',
				background: '#00E396',
			  },
			  text: 'X annotation',
			}
		  }],
		  yaxis: [{
			y: 'July',
			y2: 'September',
			label: {
			  text: 'Y annotation'
			}
		  }]
		},
		plotOptions: {
		  bar: {
			borderRadius: 15,
			horizontal: true,
		  }
		},
		dataLabels: {
		  enabled: true
		},
		xaxis: {
		  categories: ['June', 'July', 'August', 'September', 'October', 'November', 'December'],
		},
		grid: {
		  xaxis: {
			lines: {
			  show: true
			}
		  }
		},
		yaxis: {
		  reversed: true,
		  axisTicks: {
			show: true
		  }
		}
	};

	var reservedBarChart = new ApexCharts(document.querySelector("#reservedBarChart"), reservedBarChartOptions);
	
	/* - */

	 var customDataLabelsBarChartOptions = {
		  series: [{
		  data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380]
		}],
		  chart: {
		  type: 'bar',
		  height: 380
		},
		plotOptions: {
		  bar: {
			barHeight: '100%',
			distributed: true,
			horizontal: true,
			dataLabels: {
			  position: 'bottom'
			},
		  }
		},
		colors: ['#33b2df', '#546E7A', '#d4526e', '#13d8aa', '#A5978B', '#2b908f', '#f9a3a4', '#90ee7e',
		  '#f48024', '#69d2e7'
		],
		dataLabels: {
		  enabled: true,
		  textAnchor: 'start',
		  style: {
			colors: ['#fff']
		  },
		  formatter: function (val, opt) {
			return opt.w.globals.labels[opt.dataPointIndex] + ":  " + val
		  },
		  offsetX: 0,
		  dropShadow: {
			enabled: true
		  }
		},
		stroke: {
		  width: 1,
		  colors: ['#fff']
		},
		xaxis: {
		  categories: ['South Korea', 'Canada', 'United Kingdom', 'Netherlands', 'Italy', 'France', 'Japan',
			'United States', 'China', 'India'
		  ],
		},
		yaxis: {
		  labels: {
			show: false
		  }
		},
		title: {
			text: 'Custom DataLabels',
			align: 'center',
			floating: true
		},
		subtitle: {
			text: 'Category Names as DataLabels inside bars',
			align: 'center',
		},
		tooltip: {
		  theme: 'dark',
		  x: {
			show: false
		  },
		  y: {
			title: {
			  formatter: function () {
				return ''
			  }
			}
		  }
		}
		};

		var customDataLabelsBarChart = new ApexCharts(document.querySelector("#customDataLabelsBarChart"), customDataLabelsBarChartOptions);
		customDataLabelsBarChart.render();

	/* - */

	var patternedLabelsBarChartOptions = {
	  series: [{
	  name: 'Marine Sprite',
	  data: [44, 55, 41, 37, 22, 43, 21]
	}, {
	  name: 'Striking Calf',
	  data: [53, 32, 33, 52, 13, 43, 32]
	}, {
	  name: 'Tank Picture',
	  data: [12, 17, 11, 9, 15, 11, 20]
	}, {
	  name: 'Bucket Slope',
	  data: [9, 7, 5, 8, 6, 9, 4]
	}],
	  chart: {
	  type: 'bar',
	  height: 350,
	  stacked: true,
	  dropShadow: {
		enabled: true,
		blur: 1,
		opacity: 0.25
	  }
	},
	plotOptions: {
	  bar: {
		horizontal: true,
		barHeight: '60%',
		borderRadius: 0
	  },
	},
	dataLabels: {
	  enabled: false
	},
	stroke: {
	  width: 2,
	},
	title: {
	  text: 'Compare Sales Strategy'
	},
	xaxis: {
	  categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],
	},
	yaxis: {
	  title: {
		text: undefined
	  },
	},
	tooltip: {
	  shared: false,
	  y: {
		formatter: function (val) {
		  return val + "K"
		}
	  }
	},
	fill: {
	  type: 'pattern',
	  opacity: 1,
	  pattern: {
		style: ['circles', 'slantedLines', 'verticalLines', 'horizontalLines'], // string or array of strings
	
	  }
	},
	states: {
	  hover: {
		filter: 'none'
	  }
	},
	legend: {
	  position: 'right',
	  offsetY: 40
	}
	};

	var patternedLabelsBarChart = new ApexCharts(document.querySelector("#patternedLabelsBarChart"), patternedLabelsBarChartOptions);
	patternedLabelsBarChart.render();

	/* - */

	var barChartImagesOptions = {
          series: [{
          name: 'coins',
          data: [2, 4, 3, 4, 3, 5, 5, 6.5, 6, 5, 4, 5, 8, 7, 7, 8, 8, 10, 9, 9, 12, 12,
            11, 12, 13, 14, 16, 14, 15, 17, 19, 21
          ]
        }],
          chart: {
          type: 'bar',
          height: 410,
          animations: {
            enabled: false
          }
        },
        plotOptions: {
          bar: {
            horizontal: true,
            barHeight: '100%',
        
          },
        },
        dataLabels: {
          enabled: false,
        },
        stroke: {
          colors: ["#fff"],
          width: 0.2
        },
        labels: Array.apply(null, {length: 39}).map(function(el, index){
          return index + 1;
        }),
        yaxis: {
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            show: false
          },
          title: {
            text: 'Weight',
          },
        },
        grid: {
          position: 'back'
        },
        title: {
          text: 'Paths filled by clipped image',
          align: 'right',
          offsetY: 30
        },
        fill: {
          type: 'image',
          opacity: 0.87,
          image: {
            src: ['../img/demo/gallery/43.jpg'],
            width: 947,
            height: 631
          }
        },
        };

        var barChartImages = new ApexCharts(document.querySelector("#barChartImages"), barChartImagesOptions);
        barChartImages.render();

	/* - */

	/* initilize all charts on DOM ready */
	$(document).ready(function() {
		basicBarChart.render();
		groupedBarChart.render();
		stackedBarChart.render();
		stackedBarChart100.render();
		 barChartNegativeValues.render();
		 reservedBarChart.render();
	});

</script>
{{/inline}}

{{/layouts/main}}