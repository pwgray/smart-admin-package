{{#> 
	layouts/main 
	title="Apexcharts - Line" 
	pagename="statistics_apexcharts_line" 
	category_1="Statistics" 
	category_2="Apexcharts"
	heading="<i class='subheader-icon fal fa-chart-pie'></i> Apexchart: <span class='fw-300'>Line</span> <sup class='badge badge-primary fw-500'>ADDON</sup>" 
	pagedescription="Explore the sample JavaScript charts created to show some of the enticing features packed in ApexChart"
}}

{{#*inline "head-block"}}
<link rel="stylesheet" media="screen, print" href="css/statistics/apexcharts/apexcharts.css">
{{/inline}}

{{#*inline "content-block"}}

<div class="alert alert-primary">
	<div class="d-flex flex-start w-100">
		<div class="mr-2 hidden-md-down">
			<span class="icon-stack icon-stack-lg">
				<i class="base base-6 icon-stack-3x opacity-100 color-primary-500"></i>
				<i class="base base-10 icon-stack-2x opacity-100 color-primary-300 fa-flip-vertical"></i>
				<i class="ni ni-blog-read icon-stack-1x opacity-100 color-white"></i>
			</span>
		</div>
		<div class="d-flex flex-fill">
			<div class="flex-fill">
				<span class="h5">Line Charts</span>
				<p>Line Charts are a typical pictorial representation that depicts trends and behaviors over time. It is represented by a series of data points connected with a line. A unique feature of the line chart is the possibility of incorporating a large number of data into a single chart without any difficulty in viewing or understanding the information on the chart. In this line chart guide, we will go through the configuration and options to plot different kinds of line graphs.
				</p>
				<p class="m-0">
					Find tutorials, guidelines and more on their <a href="https://apexcharts.com/docs/chart-types/line-chart/" target="_blank">official documentation</a> 
				</p>
			</div>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-xl-6">
		<!-- basic line chart -->
		<div id="panel-1" class="panel">
			<div class="panel-hdr">	
				<h2>
					Area <span class="fw-300"><i>Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">			
					<div id="basicLineChartap" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- zoomable timeseries -->
		<div id="panel-2" class="panel">
			<div class="panel-hdr">	
				<h2>
					Basic <span class="fw-300"><i>Line Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="zoomableTimeSeries" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- stepline chart -->
		<div id="panel-3" class="panel">
			<div class="panel-hdr">	
				<h2>
					Stepline <span class="fw-300"><i>Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="steplineChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- null values chart -->
		<div id="panel-4" class="panel">
			<div class="panel-hdr">	
				<h2>
					Null <span class="fw-300"><i>Values</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="nullValuesChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
	</div>	
	<div class="col-xl-6">
		<!-- basic line chart labels -->
		<div id="panel-8" class="panel">
			<div class="panel-hdr">	
				<h2>
					Line <span class="fw-300"><i>Labels</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="basicLineChartLabels" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- line with annotation -->
		<div id="panel-9" class="panel">
			<div class="panel-hdr">	
				<h2>
					Line <span class="fw-300"><i>Annotation</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="lineAnnotation" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- gradientline chart -->
		<div id="panel-10" class="panel">
			<div class="panel-hdr">	
				<h2>
					Gradient <span class="fw-300"><i>Line</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="gradientlineChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
		<!-- dynamic updating chart -->
		<div id="panel-11" class="panel">
			<div class="panel-hdr">	
				<h2>
					Dynamic <span class="fw-300"><i>Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="dynamicUpdateChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
	</div>	
	<div class="col-xl-12">
		<!-- page statistics chart -->
		<div id="panel-5" class="panel">
			<div class="panel-hdr">	
				<h2>
					Statistics <span class="fw-300"><i>Chart</i></span> 
				</h2>
				<div class="panel-toolbar">
					<button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"></button>
					<button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
					<button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Close"></button>
				</div>
			</div>
			<div class="panel-container show">
				<div class="panel-content">		
					<div id="kitchenSinkLineChart" style="width:100%; height:300px;"></div>
				</div>
			</div>
		</div>
	</div>
</div>

{{/inline}}

{{#*inline "scripts-block"}}
<!-- plugin apexcharts.bundle.js : MIT license -->
<script>
  window.Promise ||
	document.write(
	  '<script src="https://cdn.jsdelivr.net/npm/promise-polyfill@8/dist/polyfill.min.js"><\/script>'
	);
  window.Promise ||
	document.write(
	  '<script src="https://cdn.jsdelivr.net/npm/eligrey-classlist-js-polyfill@1.2.20171210/classList.min.js"><\/script>'
	);
  window.Promise ||
	document.write(
	  '<script src="https://cdn.jsdelivr.net/npm/findindex_polyfill_mdn"><\/script>'
	);
</script>
<script src="js/statistics/demo-data/apexcharts-irregular-data-series.js"></script>
<script src="js/statistics/apexcharts/apexcharts.bundle.js"></script>
<script>	

	/*FORMAT DATA*/
	var ts2 = 1484418600000;
	var dates = [];
	var spikes = [5, -5, 3, -3, 8, -8]
	for (var i = 0; i < 120; i++) {
		ts2 = ts2 + 86400000;
		var innerArr = [ts2, dataSeries[1][i].value];
		dates.push(innerArr)
	}

	/* DATE FORMAT LIVE DATA */
	var lastDate = 0;
	var data = []
	var TICKINTERVAL = 86400000
	let XAXISRANGE = 777600000

	function getDayWiseTimeSeries(baseval, count, yrange) {
		var i = 0;
		while (i < count) {
			var x = baseval;
			var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;

			data.push({
				x,
				y
			});
			lastDate = baseval
			baseval += TICKINTERVAL;
			i++;
		}
	}

	getDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {
		min: 10,
		max: 90
	})

	function getNewSeries(baseval, yrange) {
		var newDate = baseval + TICKINTERVAL;
		lastDate = newDate

		for (var i = 0; i < data.length - 10; i++) {
			// IMPORTANT
			// we reset the x and y of the data which is out of drawing area
			// to prevent memory leaks
			data[i].x = newDate - XAXISRANGE - TICKINTERVAL
			data[i].y = 0
		}

		data.push({
			x: newDate,
			y: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min
		})
	}

	function resetData() {
		// Alternatively, you can also reset the data at certain intervals to prevent creating a huge series 
		data = data.slice(data.length - 10, data.length);
	}
	/* DATE FORMAT LIVE DATA -- end */

	/* basic line chart */
	var basicLineChartOptions = {
		series: [{
			name: "Desktops",
			data: [10, 41, 35, 51, 49, 62, 69, 91, 148]
		}],
		chart: {
			height: 350,
			type: 'line',
			zoom: {
				enabled: false
			},
		},
		tooltip: {
			theme: 'dark',
  		},
		dataLabels: {
			enabled: false
		},
		stroke: {
			curve: 'straight'
		},
		title: {
			text: 'Product Trends by Month',
			align: 'left'
		},
		colors:[color.primary._500],
		grid: {
			row: {
				colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
				opacity: 0.5
			},
		},
		xaxis: {
			categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],
		}
	};

	var basicLineChart = new ApexCharts(document.querySelector("#basicLineChartap"), basicLineChartOptions);
	/* basic line chart -- end */

	/* basic line chart labels */
	var basicLineChartLabelsOptions = {
		series: [{
				name: "High - 2013",
				data: [28, 29, 33, 36, 32, 32, 33]
			},
			{
				name: "Low - 2013",
				data: [12, 11, 14, 18, 17, 13, 13]
			}
		],
		chart: {
			height: 350,
			type: 'line',
			dropShadow: {
				enabled: true,
				color: '#000',
				top: 18,
				left: 7,
				blur: 10,
				opacity: 0.2
			},
			toolbar: {
				show: false
			}
		},
		colors: [color.primary._300, color.info._300],
		dataLabels: {
			enabled: true,
		},
		stroke: {
			curve: 'smooth'
		},
		title: {
			text: 'Average High & Low Temperature',
			align: 'left'
		},
		grid: {
			borderColor: '#e7e7e7',
			row: {
				colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
				opacity: 0.5
			},
		},
		markers: {
			size: 1
		},
		xaxis: {
			categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],
			title: {
				text: 'Month'
			}
		},
		yaxis: {
			title: {
				text: 'Temperature'
			},
			min: 5,
			max: 40
		},
		legend: {
			position: 'top',
			horizontalAlign: 'right',
			floating: true,
			offsetY: -25,
			offsetX: -5
		}
	};

	var basicLineChartLabels = new ApexCharts(document.querySelector("#basicLineChartLabels"), basicLineChartLabelsOptions);
	/* basic line chart labels -- end */

	/* zoomable timeseries */
	var zoomableTimeSeriesOptions = {
		series: [{
			name: 'XYZ MOTORS',
			data: dates
		}],
		chart: {
			type: 'area',
			stacked: false,
			height: 350,
			zoom: {
				type: 'x',
				enabled: true,
				autoScaleYaxis: true
			},
			toolbar: {
				autoSelected: 'zoom'
			}
		},
		dataLabels: {
			enabled: false
		},
		markers: {
			size: 0,
		},
		colors:[color.primary._500],
		title: {
			text: 'Stock Price Movement',
			align: 'left'
		},
		fill: {
			type: 'gradient',
			gradient: {
				shadeIntensity: 1,
				inverseColors: false,
				opacityFrom: 0.8,
				opacityTo: 0,
				stops: [0, 90, 100]
			},
		},
		yaxis: {
			labels: {
				formatter: function(val) {
					return (val / 1000000).toFixed(0);
				},
			},
			title: {
				text: 'Price'
			},
		},
		xaxis: {
			type: 'datetime',
		},
		tooltip: {
			shared: false,
			y: {
				formatter: function(val) {
					return (val / 1000000).toFixed(0)
				}
			}
		}
	};

	var zoomableTimeSeries = new ApexCharts(document.querySelector("#zoomableTimeSeries"), zoomableTimeSeriesOptions);
	/* zoomable timeseries -- end */

	/* line with annotation */
	var lineAnnotationOptions = {
		series: [{
			data: series.monthDataSeries1.prices
		}],
		chart: {
			height: 350,
			type: 'line',
			id: 'areachart-2'
		},
		colors:[color.primary._500],
		annotations: {
			yaxis: [{
				y: 8200,
				borderColor: color.warning._700,
				label: {
					borderColor: color.warning._700,
					style: {
						color: '#fff',
						background: color.warning._500,
					},
					text: 'Support',
				}
			}, {
				y: 8600,
				y2: 9000,
				borderColor: color.primary._900,
				fillColor: color.primary._200,
				opacity: 0.2,
				label: {
					borderColor: color.primary._900,
					style: {
						fontSize: '10px',
						color: '#ffffff',
						background: color.primary._500,
					},
					text: 'Y-axis range',
				}
			}],
			xaxis: [{
				x: new Date('23 Nov 2017').getTime(),
				strokeDashArray: 0,
				borderColor: color.info._500,
				label: {
					borderColor: color.info._500,
					style: {
						color: '#fff',
						background: color.info._200,
					},
					text: 'Anno Test',
				}
			}, {
				x: new Date('26 Nov 2017').getTime(),
				x2: new Date('28 Nov 2017').getTime(),
				fillColor: color.success._300,
				opacity: 0.4,
				label: {
					borderColor: color.success._700,
					style: {
						fontSize: '10px',
						color: '#fff',
						background: color.success._500,
					},
					offsetY: -10,
					text: 'X-axis range',
				}
			}],
			points: [{
				x: new Date('01 Dec 2017').getTime(),
				y: 8607.55,
				marker: {
					size: 8,
					fillColor: '#fff',
					strokeColor: 'red',
					radius: 2,
					cssClass: 'apexcharts-custom-class'
				},
				label: {
					borderColor: color.danger._700,
					offsetY: 0,
					style: {
						color: '#fff',
						background: color.danger._600,
					},

					text: 'Point Annotation',
				}
			}, {
				x: new Date('08 Dec 2017').getTime(),
				y: 9340.85,
				marker: {
					size: 0
				},
				image: {
					path: 'img/logo.png'
				}
			}]
		},
		dataLabels: {
			enabled: false
		},
		stroke: {
			curve: 'straight'
		},
		grid: {
			padding: {
				right: 30,
				left: 20
			}
		},
		title: {
			text: 'Line with Annotations',
			align: 'left'
		},
		labels: series.monthDataSeries1.dates,
		xaxis: {
			type: 'datetime',
		},
	};

	var lineAnnotation = new ApexCharts(document.querySelector("#lineAnnotation"), lineAnnotationOptions);
	/* line with annotation -- end */

	/* stepline chart */
	var steplineChartOptions = {
		series: [{
			data: [34, 44, 54, 21, 12, 43, 33, 23, 66, 66, 58]
		}],
		chart: {
			type: 'line',
			height: 350
		},
		colors:[color.primary._500],
		stroke: {
			curve: 'stepline',
		},
		dataLabels: {
			enabled: false
		},
		title: {
			text: 'Stepline Chart',
			align: 'left'
		},
		markers: {
			hover: {
				sizeOffset: 4
			}
		}
	};

	var steplineChart = new ApexCharts(document.querySelector("#steplineChart"), steplineChartOptions);
	/* stepline chart -- end*/

	/* gradientline chart */
	var gradientlineChartOptions = {
		series: [{
			name: 'Likes',
			data: [4, 3, 10, 9, 29, 19, 22, 9, 12, 7, 19, 5, 13, 9, 17, 2, 7, 5]
		}],
		chart: {
			height: 350,
			type: 'line',
		},
		colors:[color.primary._500],
		stroke: {
			width: 7,
			curve: 'smooth'
		},
		xaxis: {
			type: 'datetime',
			categories: ['1/11/2000', '2/11/2000', '3/11/2000', '4/11/2000', '5/11/2000', '6/11/2000', '7/11/2000', '8/11/2000', '9/11/2000', '10/11/2000', '11/11/2000', '12/11/2000', '1/11/2001', '2/11/2001', '3/11/2001', '4/11/2001', '5/11/2001', '6/11/2001'],
		},
		title: {
			text: 'Social Media',
			align: 'left',
			style: {
				fontSize: "16px",
				color: '#666'
			}
		},
		fill: {
			type: 'gradient',
			gradient: {
				shade: 'dark',
				gradientToColors: [color.success._500],
				shadeIntensity: 1,
				type: 'horizontal',
				opacityFrom: 1,
				opacityTo: 1,
				stops: [0, 100, 100, 100]
			},
		},
		markers: {
			size: 4,
			colors: [color.danger._500],
			strokeColors: "#fff",
			strokeWidth: 2,
			hover: {
				size: 7,
			}
		},
		yaxis: {
			min: -10,
			max: 40,
			title: {
				text: 'Engagement',
			},
		}
	};

	var gradientlineChart = new ApexCharts(document.querySelector("#gradientlineChart"), gradientlineChartOptions);
	/* gradientline chart -- end */

	/* null values chart */
	var nullValuesOptions = {
		series: [{
			name: 'Peter',
			data: [5, 5, 10, 8, 7, 5, 4, null, null, null, 10, 10, 7, 8, 6, 9]
		}, {
			name: 'Johnny',
			data: [10, 15, null, 12, null, 10, 12, 15, null, null, 12, null, 14, null, null, null]
		}, {
			name: 'David',
			data: [null, null, null, null, 3, 4, 1, 3, 4, 6, 7, 9, 5, null, null, null]
		}],
		chart: {
			height: 350,
			type: 'line',
			zoom: {
				enabled: false
			},
			animations: {
				enabled: false
			}
		},
		colors:[color.primary._500, color.info._500, color.success._500, color.danger._500, color.warning._500],
		stroke: {
			width: [5, 5, 4],
			curve: 'straight'
		},
		labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
		title: {
			text: 'Missing data (null values)'
		},
		xaxis: {},
	};

	var nullValuesChart = new ApexCharts(document.querySelector("#nullValuesChart"), nullValuesOptions);
	/* null values chart -- end */

	/* dynamic updating chart */
	var dynamicUpdateChartOptions = {
		series: [{
			data: data.slice()
		}],
		chart: {
			id: 'realtime',
			height: 350,
			type: 'line',
			animations: {
				enabled: true,
				easing: 'linear',
				dynamicAnimation: {
					speed: 1000
				}
			},
			toolbar: {
				show: false
			},
			zoom: {
				enabled: false
			}
		},
		colors:[color.primary._500],
		dataLabels: {
			enabled: false
		},
		stroke: {
			curve: 'smooth'
		},
		title: {
			text: 'Dynamic Updating Chart',
			align: 'left'
		},
		markers: {
			size: 0
		},
		xaxis: {
			type: 'datetime',
			range: XAXISRANGE,
		},
		yaxis: {
			max: 100
		},
		legend: {
			show: false
		},
	};

	var dynamicUpdateChart = new ApexCharts(document.querySelector("#dynamicUpdateChart"), dynamicUpdateChartOptions);

	//window intervel for ticks
	window.setInterval(function() {
		getNewSeries(lastDate, {
			min: 10,
			max: 90
		})

		dynamicUpdateChart.updateSeries([{
			data: data
		}])
	}, 1000)
	/* dynamic updating chart -- end */

	/* page statistics chart */
	var kitchenSinkLineChartOptions = {
		series: [{
				name: "Session Duration",
				data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10]
			},
			{
				name: "Page Views",
				data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35]
			},
			{
				name: 'Total Visits',
				data: [87, 57, 74, 99, 75, 38, 62, 47, 82, 56, 45, 47]
			}
		],
		chart: {
			height: 350,
			type: 'line',
			zoom: {
				enabled: false
			},
		},
		colors:[color.primary._500, color.info._500, color.success._500, color.danger._500, color.warning._500],
		dataLabels: {
			enabled: false
		},
		stroke: {
			width: [5, 7, 5],
			curve: 'straight',
			dashArray: [0, 8, 5]
		},
		title: {
			text: 'Page Statistics',
			align: 'left'
		},
		legend: {
			tooltipHoverFormatter: function(val, opts) {
				return val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''
			}
		},
		markers: {
			size: 0,
			hover: {
				sizeOffset: 6
			}
		},
		xaxis: {
			categories: ['01 Jan', '02 Jan', '03 Jan', '04 Jan', '05 Jan', '06 Jan', '07 Jan', '08 Jan', '09 Jan',
				'10 Jan', '11 Jan', '12 Jan'
			],
		},
		tooltip: {
			y: [{
					title: {
						formatter: function(val) {
							return val + " (mins)"
						}
					}
				},
				{
					title: {
						formatter: function(val) {
							return val + " per session"
						}
					}
				},
				{
					title: {
						formatter: function(val) {
							return val;
						}
					}
				}
			]
		},
		grid: {
			borderColor: '#f1f1f1',
		}
	};

	var kitchenSinkLineChart = new ApexCharts(document.querySelector("#kitchenSinkLineChart"), kitchenSinkLineChartOptions);
	/* page statistics chart -- end */


	/* initilize all charts on DOM ready */
	$(document).ready(function() {
		basicLineChart.render();
		basicLineChartLabels.render();
		zoomableTimeSeries.render();
		lineAnnotation.render();
		steplineChart.render();
		gradientlineChart.render();
		nullValuesChart.render();
		dynamicUpdateChart.render();
		kitchenSinkLineChart.render();
	});

</script>
{{/inline}}

{{/layouts/main}}